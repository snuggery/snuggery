{
	"compilerOptions": {
		// importsNotUsedAsValues is nice, verbatimModuleSyntax doesn't look to be...
		"ignoreDeprecations": "5.0",

		// Node 16.10 and up support ± all of the syntax of ES2022
		// Notable exceptions are
		// - static initializers
		// so don't use those (eslint rule no-restricted-syntax).
		// Private class fields are included in ES2022 and it's
		// incredibly silly to have TypeScript polyfill it even
		// though all supported Node versions support it.
		// If only typescript had support for specifying a Node.js
		// version as target...
		"target": "es2022",
		"lib": ["es2022"],
		// Thanks https://node.green/ & https://github.com/microsoft/TypeScript/wiki/Node-Target-Mapping

		"module": "Node16",
		"isolatedModules": true,
		"preserveConstEnums": true,

		"composite": true,
		"incremental": true,

		"strict": true,
		"forceConsistentCasingInFileNames": true,
		"importsNotUsedAsValues": "error",
		"noFallthroughCasesInSwitch": true,
		"noImplicitOverride": true,
		"noImplicitReturns": true,
		"noUncheckedIndexedAccess": true,
		"noUnusedLocals": true,
		"noUnusedParameters": true,
		"useUnknownInCatchVariables": true,

		"experimentalDecorators": true,
		"skipLibCheck": true,
		"declaration": true,

		"outDir": "${configDir}/dist",
		"rootDir": "${configDir}/src",
		"types": ["node"]
	},
	"include": ["${configDir}/src/**/*.ts"],
	"exclude": ["${configDir}/**/__tests__/**"]
}
